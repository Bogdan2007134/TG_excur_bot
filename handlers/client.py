from config import bot, db, ADMINS, NAME_BOT
from aiogram import types, Dispatcher
from txt_read.read_txt import read_txt_file
from KeyboardMarkup.KeyboardMarkup import mainMenu, navigation_menu, clear_reset_kb, clear_reset_promo_kb
from .excur import excur_Off_decorator
from KeyboardMarkup.KeyboardMarkup import admin_panel
from datetime import datetime
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from states.states import FeedbackState, PromocodeUser
import os
import asyncio

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
async def start_handler(msg: types.Message) -> None:
    if msg.chat.type == 'private':
        contents = await read_txt_file(['maintxt\\hello.txt'])
        if (not db.user_exists(msg.from_user.id)):
            date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            
            start_command = msg.text
            ref_id = str(start_command[7:])
            
            if str(ref_id) != '':
                if str(ref_id) != str(msg.from_user.id): 
                    db.add_user(msg.from_user.id, date, ref_id)
                    try:
                        count_ref = db.count_referrals(msg.from_user.id)
                        await bot.send_message(ref_id, f'''
üî• –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!
üë• –£ –≤–∞—Å —É–∂–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {count_ref} !
üí∞ –ü—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ö –ø–æ–∫—É–ø–∫–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π —Å–∫–∏–¥–∫–æ–π –æ—Ç 5% –¥–æ 30%.
                                               ''') 
                    except:
                        pass
                else:
                    db.add_user(msg.from_user.id, date)
                    return await bot.send_message(msg.from_user.id, '–ù–µ–ª—å–∑—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–≤–æ–µ–π –∂–µ —Å—Å—ã–ª–∫–µ!')  
            else:
                db.add_user(msg.from_user.id, date)
            
            await bot.send_message(msg.from_user.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, —É–≤–∞–∂–∞–µ–º—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ {msg.from_user.first_name}üïµÔ∏è‚Äç‚ôÄÔ∏è\n\n{contents[0]}", reply_markup=mainMenu())
            
            if msg.from_user.id in ADMINS:
                await bot.send_message(msg.from_user.id, '‚òëÔ∏è–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!‚òëÔ∏è', reply_markup=admin_panel())
                              
        elif (db.user_exists(msg.from_user.id)):
            await bot.send_message(msg.from_user.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å —Å–Ω–æ–≤–∞, —É–≤–∞–∂–∞–µ–º—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ {msg.from_user.first_name}üïµÔ∏è‚Äç‚ôÄÔ∏è\n\n{contents[0]}", reply_markup=mainMenu())
            if msg.from_user.id in ADMINS:
                await bot.send_message(msg.from_user.id, '‚òëÔ∏è–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!‚òëÔ∏è', reply_markup=admin_panel())
            
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ menu"""
async def navigation_menu_handler(msg: types.Message) -> None:
    await msg.delete()
    await msg.answer("–ú–µ–Ω—é:", reply_markup=navigation_menu())

async def navigation_menu_callhandler(call: types.CallbackQuery) -> None:
    await call.message.answer("–ú–µ–Ω—é:", reply_markup=navigation_menu())
    
async def send_feedback(call: types.CallbackQuery, state: FSMContext):
    await call.message.answer("""
‚úâÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –±–æ—Ç—É!
üìù –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É! üíå
üíº –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏, –∏–¥–µ—è–º–∏ –∏–ª–∏ –∂–∞–ª–æ–±–æ–π. üí≠
                              """, reply_markup=clear_reset_kb())
    await FeedbackState.waiting_for_feedback.set()
    

async def handle_feedback_message(msg: types.Message, state: FSMContext):
    date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f'support_' + str(msg.from_user.id) + '%' + str(msg.from_user.first_name)),
    )
    if  types.ContentType.TEXT == msg.content_type: 
        for admin in ADMINS:
            await bot.send_message(chat_id=admin, text=f"""
üîî –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ üîî

üìÖ –î–∞—Ç–∞: {date}
üë§ –ò–º—è: {msg.from_user.first_name}
üÜî ID: {msg.from_user.id}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {msg.text}

üöÄ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Å–∞–º–æ–µ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.

–°–ø–∞—Å–∏–±–æ! üôè
        """, reply_markup=keyboard)        
        
    elif types.ContentType.PHOTO == msg.content_type:
        text = f"""
üîî –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ üîî

üìÖ –î–∞—Ç–∞: {date}
üë§ –ò–º—è: {msg.from_user.first_name}
üÜî ID: {msg.from_user.id}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {msg.html_text if msg.caption else ' '}

üöÄ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Å–∞–º–æ–µ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.

–°–ø–∞—Å–∏–±–æ! üôè
        """
        for admin in ADMINS:
            await bot.send_photo(
                chat_id=admin,
                photo=msg.photo[-1].file_id,
                caption=text
            )
    elif types.ContentType.VIDEO == msg.content_type:
        text = f"""
üîî –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ üîî

üìÖ –î–∞—Ç–∞: {date}
üë§ –ò–º—è: {msg.from_user.first_name}
üÜî ID: {msg.from_user.id}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {msg.html_text if msg.caption else ' '}

üöÄ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Å–∞–º–æ–µ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.

–°–ø–∞—Å–∏–±–æ! üôè
        """
        for admin in ADMINS:
            await bot.send_video(
                chat_id=admin,
                video=msg.video.file_id,
                caption=text
            )
    elif types.ContentType.STICKER == msg.content_type: 
        for admin in ADMINS:
            await bot.send_sticker(
                chat_id=admin,
                sticker=msg.sticker.file_id
            )
    else:
        await msg.answer(
            '<b>–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!</b>'
        )
        
     
    await msg.answer(f"""
üìÖ {date} üìÖ

_______________________________

üíå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –±–æ—Ç–∞ üíå 

–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –±–æ—Ç–∞. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.

–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!
                        """)
    await state.finish() 
@excur_Off_decorator
async def set_PromoUser(call: types.CallbackQuery):
    await PromocodeUser.promocode.set()
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ –Ω–æ–º–µ—Ä –∫—É–ø–æ–Ω–∞ –Ω–∞ —Å–∫–∏–¥–∫—É:', reply_markup=clear_reset_kb())    
    
    
async def set_PromoUser_desc(msg: types.Message, state: FSMContext):  
    promocode = msg.text 
    promo = db.get_promo_discount_dict()
    msgs =  await msg.answer('<b>–ü–æ–∏—Å–∫...</b>')
    if promocode in promo:
        if not promocode in db.get_promocode_user(msg.from_user.id):
            if db.get_usage_by_promo(promocode) != 101:
                promo_discount = promo[f'{promocode}']
                await msgs.delete()
                if db.get_usage_by_promo(promocode) == 1:
                    db.add_to_promocode(msg.from_user.id, promocode)
                    db.add_current_promo(msg.from_user.id, promocode)
                    db.update_usage_by_promo(promocode, 101)
                    await msg.answer(f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! \n–í—ã —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ –ª–∏—á–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ "{promocode}" –∏ –ø–æ–ª—É—á–∏–ª–∏ —Å–∫–∏–¥–∫—É –≤ —Ä–∞–∑–º–µ—Ä–µ {promo_discount}%! üéÅ', reply_markup=mainMenu())   
                    await asyncio.sleep(0.15)
                else:
                    db.add_to_promocode(msg.from_user.id, promocode)
                    db.add_current_promo(msg.from_user.id, promocode)
                    await msg.answer(f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! \n–í—ã —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ "{promocode}" –∏ –ø–æ–ª—É—á–∏–ª–∏ —Å–∫–∏–¥–∫—É –≤ —Ä–∞–∑–º–µ—Ä–µ {promo_discount}%! üéÅ', reply_markup=mainMenu()) 
                await state.finish()
            else:
                await msgs.delete()
                await msg.answer(f'''
–ü—Ä–æ–º–æ–∫–æ–¥ "{promocode}" –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π! üòî
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. üí¨
                                ''', reply_markup=clear_reset_promo_kb()) 
        else:
            await msgs.delete()
            await msg.answer(f'''
–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ "{promocode}"!
–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!
                            ''', reply_markup=clear_reset_promo_kb()) 
    else:
        await msgs.delete()
        await msg.answer(f'''
–ü—Ä–æ–º–æ–∫–æ–¥ "{promocode}" –Ω–µ –Ω–∞–π–¥–µ–Ω!üòî
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üîÅ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. 
                         ''', reply_markup=clear_reset_promo_kb()) 
    
 
async def give_promocode_refer_handler(call: types.CallbackQuery,):
    await call.message.answer(f'''
üåü –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/{NAME_BOT}?start={call.from_user.id} üåü

üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {db.count_referrals(call.from_user.id)}

üéÅ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã! –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ö –ø–æ–∫—É–ø–∫–∏ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –≤—ã –±—É–¥–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–º–∏ —Å–ª—É—á–∞–π–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –æ—Ç 5% –¥–æ 30%.

‚ú® –ù–µ —É–ø—É—Å–∫–∞–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–µ–±—è –∏ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–∫–∏–¥–∫–∞–º–∏ –Ω–∞ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è! ‚ú®                  
                         ''') 
   
def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(start_handler, commands='start')
    dp.register_message_handler(navigation_menu_handler, commands='menu')
    dp.register_callback_query_handler(navigation_menu_callhandler, text='backformenu')
    
    dp.register_callback_query_handler(send_feedback, text='send_feedback')
    dp.register_message_handler(handle_feedback_message, state=FeedbackState.waiting_for_feedback, content_types=types.ContentType.ANY)
    
    dp.register_callback_query_handler(set_PromoUser, text='promocode')
    dp.register_message_handler(set_PromoUser_desc, state=PromocodeUser.promocode)
    
    dp.register_callback_query_handler(give_promocode_refer_handler, text='givepromocode')
    
    